on:
  push:
    tags:
      - 'v*'

name: GitHub and Maven wrapper release

jobs:
  build:
    name: Create release
    runs-on: ubuntu-latest
    environment:
      name: release
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Build wrapper with Maven
        id: build_wrapper
        run: mvn -B clean package --file ./wrapper/pom.xml

      - name: Get release version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF:11}

      - name: Copy release artifact
        id: copy_release_artifact
        run: cp ./wrapper/target/otel-java-lambda-wrapper-${{ steps.get_version.outputs.VERSION }}.jar otel-java-lambda-wrapper.jar

      - name: Create Github Release
        id: create_github_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: Release ${{ steps.get_version.outputs.VERSION }}
          files: otel-java-lambda-wrapper.jar

      - name: Prepare release settings
        id: prepare_release
        run: |
          sed -i 's/OSSRH_USER/${{ secrets.OSSRH_USER }}/g' ./wrapper/release-settings.xml
          sed -i 's/OSSRH_PASSWORD/${{ secrets.OSSRH_PASSWORD }}/g' ./wrapper/release-settings.xml

      - name: Install gpg secret key
        id: install_secret_key
        run: |
          cat <(echo -e "${{ secrets.OSSRH_GPG_SECRET_KEY }}") | gpg --batch --import
          gpg --list-secret-keys --keyid-format LONG

      - name: Publish to OSS M2 repo
        id: create_m2_release
        run: mvn -B -DperformRelease=true -Dgpg.passphrase=${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }} deploy --file ./wrapper/pom.xml -s ./wrapper/release-settings.xml
